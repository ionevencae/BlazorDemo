@page "/edittask"
@page "/edittask/{id:int}"
@page "/edittask/{projcode}/{id:int}"

@inject NavigationManager NavigationManager
@inject IRoleService RoleService
@inject IUserService UserService
@inject IProjectService ProjectService
@inject IProjectTaskService ProjectTaskService
@inject ILocalStorage LocalStorage
@inject AuthService authService

@if (authService.CurrentRoleName == "administrator" || authService.CurrentRoleName == "projectmanager" || authService.CurrentRoleName == "developer")
{
    @if (authService.CurrentRoleName == "administrator")
    {
        if (false)
        {
            <table class="table">
                <thead>
                    <tr>

                        @if (projcode == null)
                        {
                            <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                            <th style="width: 33%"><h2>> Edit Task</h2></th>
                            <th>
                                <h3>
                                    <button class="btn btn-danger" @onclick="(() => Delete())">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                        </svg>
                                        Delete this Task
                                    </button>

                                </h3>
                            </th>
                        }
                        else
                        {
                            <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                            <th style="width: 21%" @onclick="(() => CancelPartial())"><h2>> Single Project Tasks</h2></th>
                            <th style="width: 13%"><h2>> Edit Task</h2></th>
                            <th>
                                <h3><button class="btn btn-danger" @onclick="(() => Delete())">Delete this Task</button></h3>
                            </th>
                        }
                    </tr>
                </thead>
            </table>

            <EditForm Model="task" OnSubmit="HandleSubmit">
                <table class="table table-bordered table-hover" style="width:50%">
                    <thead>
                        <tr>
                            <td style="vertical-align: middle;">

                                <div>
                                    <label for="code">Project</label>
                                    <InputText id="role" @bind-Value="task.ParentProjectProjectCode" class="form-control" disabled></InputText>
                                </div>

                            </td>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="name">Deadline</label>
                                    <InputDate id="name" @bind-Value="task.Deadline" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Name" disabled></InputDate>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="user">Assign Task to</label>
                                    <InputSelect id="user" @bind-Value="task.AssigneeUsername" class="form-control" required>
                                        <option selected hidden>Choose...</option>
                                        @foreach (var user in UserService.Users)
                                        {
                                            if (user.Username == task.AssigneeUsername || CheckAvailableDeveloper(user))
                                            {
                                                <option value="@user.Username">@NameOfUser(user)</option>
                                            }

                                        }
                                    </InputSelect>
                                </div>
                            </td>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="name">Description</label>
                                    <InputTextArea disabled id="name" @bind-Value="task.Description" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Description" required></InputTextArea>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>

                            </th>
                            <th>
                                <div class="container-fluid">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <button style="width: 100%" class="btn btn-secondary" @onclick="(() => CancelPartial())">
                                                <span aria-hidden="true">&times;</span>
                                                Cancel
                                            </button>
                                        </div>
                                        <div class="col-sm-6">
                                            <button style="width: 100%" class="btn btn-success" @onclick="(() => SaveEdits())">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                                                    <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                                                </svg>
                                                Save
                                            </button>
                                        </div>
                                    </div>
                                </div>



                            </th>
                        </tr>
                    </thead>

                </table>

                @if (messageShow)
                {
                    <div class="mb-3">
                        <label class="form-label" style="color: red">Invalid data. Try again.</label>
                    </div>
                }



            </EditForm>
        }else
        {
            <table class="table">
                <thead>
                    <tr>

                        @if (projcode == null)
                        {
                            <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                            <th style="width: 34%"><h2>> Edit Task</h2></th>
                            <th>
                                <h3>
                                    <button class="btn btn-danger" @onclick="(() => Delete())">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                        </svg>
                                        Delete this Task
                                    </button>
                                </h3>
                            </th>
                        }
                        else
                        {
                            <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                            <th style="width: 21%" @onclick="(() => CancelPartial())"><h2>> Single Project Tasks</h2></th>
                            <th style="width: 13%"><h2>> Edit Task</h2></th>
                            <th>
                                <h3>
                                    <button class="btn btn-danger" @onclick="(() => Delete())">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                        </svg>
                                        Delete this Task
                                    </button>
                                </h3>
                            </th>
                        }
                    </tr>
                </thead>
            </table>

            <EditForm Model="task" OnSubmit="HandleSubmit">
                <table class="table table-bordered table-hover" style="width:50%">
                    <thead>
                        <tr>
                            <td style="vertical-align: middle;">

                                <div>
                                    <label for="code">Project</label>
                                    <InputText id="role" @bind-Value="task.ParentProjectProjectCode" class="form-control" disabled></InputText>
                                </div>

                            </td>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="name">Deadline</label>
                                    <InputDate id="name" @bind-Value="task.Deadline" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Name"></InputDate>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="user">Assign Task to</label>
                                    <InputSelect id="user" @bind-Value="task.AssigneeUsername" class="form-control" required>
                                        <option selected hidden>Choose...</option>
                                        @foreach (var user in UserService.Users)
                                        {
                                            if (authService.CurrentRoleName == "administrator" || (authService.CurrentRoleName == "projectmanager" && OnlyDevelopers(user)) ||
                                            (authService.CurrentRoleName == "projectmanager" && user.Username == task.AssigneeUsername))
                                            {
                                                if (user.Username == task.AssigneeUsername || CheckAvailableDeveloper(user))
                                                {
                                                    <option value="@user.Username">@NameOfUser(user)</option>
                                                }
                                            }
                                        }
                                    </InputSelect>
                                </div>
                            </td>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="name">Description</label>
                                    <InputTextArea id="name" @bind-Value="task.Description" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Description" required></InputTextArea>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td style="vertical-align: middle;">
                                <div>
                                    <label for="user">Task Status</label>
                                    <select id="user" class="form-control" required
                                            value="@task.Status"
                                @onchange="@((ChangeEventArgs __e) => StatusChanged(__e))">


                                        <option value="0">New</option>
                                        <option value="1">In Progress</option>
                                        <option value="2">Finished</option>

                                    </select>
                                </div>
                            </td>
                            <td style="vertical-align: middle; width: 50%">
                                <div>
                                    <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                                    <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                                           value="@task.Progress"
                               @onchange="@((ChangeEventArgs __e) => ChangeProgressAndStatus(__e))">
                                </div>
                                @*<div>
                    <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                    <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                    @bind="task.Progress">
                    </div>*@
                            </td>
                        </tr>
                        <tr>
                            <th>

                            </th>
                            <th>
                                <div class="container-fluid">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <button style="width: 100%" class="btn btn-secondary" @onclick="(() => CancelPartial())">
                                                <span aria-hidden="true">&times;</span>
                                                Cancel
                                            </button>
                                        </div>
                                        <div class="col-sm-6">
                                            <button style="width: 100%" class="btn btn-success" @onclick="(() => SaveEdits())">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                                                    <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                                                </svg>
                                                Save
                                            </button>
                                        </div>
                                    </div>
                                </div>



                            </th>
                        </tr>
                    </thead>

                </table>

                @if (messageShow)
                {
                    <div class="mb-3">
                        <label class="form-label" style="color: red">Invalid data. Try again.</label>
                    </div>
                }



            </EditForm>
        }
        
    }
    else if (authService.CurrentRoleName == "projectmanager")
    {
        <table class="table">
            <thead>
                <tr>

                    @if (projcode == null)
                    {
                        <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                        <th style="width: 34%"><h2>> Edit Task</h2></th>
                        <th>
                            <h3><button class="btn btn-danger" @onclick="(() => Delete())">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                    </svg>
                                Delete this Task
                                </button></h3>
                        </th>
                    }
                    else
                    {
                        <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                        <th style="width: 21%" @onclick="(() => CancelPartial())"><h2>> Single Project Tasks</h2></th>
                        <th style="width: 13%"><h2>> Edit Task</h2></th>
                        <th>
                            <h3><button class="btn btn-danger" @onclick="(() => Delete())">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                    </svg>
                                Delete this Task</button></h3>
                        </th>
                    }
                </tr>
            </thead>
        </table>

        <EditForm Model="task" OnSubmit="HandleSubmit">
            <table class="table table-bordered table-hover" style="width:50%">
                <thead>
                    <tr>
                        <td style="vertical-align: middle;">

                            <div>
                                <label for="code">Project</label>
                                <InputText id="role" @bind-Value="task.ParentProjectProjectCode" class="form-control" disabled></InputText>
                            </div>

                        </td>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="name">Deadline</label>
                                <InputDate id="name" @bind-Value="task.Deadline" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Name"></InputDate>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="user">Assign Task to</label>
                                <InputSelect id="user" @bind-Value="task.AssigneeUsername" class="form-control" required>
                                    <option selected hidden>Choose...</option>
                                    @foreach (var user in UserService.Users)
                                    {
                                        if (authService.CurrentRoleName == "administrator" || (authService.CurrentRoleName == "projectmanager" && OnlyDevelopers(user)) ||
                                        (authService.CurrentRoleName == "projectmanager" && user.Username == task.AssigneeUsername))
                                        {
                                            if (user.Username == task.AssigneeUsername || CheckAvailableDeveloper(user))
                                            {
                                                <option value="@user.Username">@NameOfUser(user)</option>
                                            }
                                        }
                                    }
                                </InputSelect>
                            </div>
                        </td>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="name">Description</label>
                                <InputTextArea id="name" @bind-Value="task.Description" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Description" required></InputTextArea>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="user">Task Status</label>
                                <select  id="user"  class="form-control" required
                                        value="@task.Status"
                                @onchange="@((ChangeEventArgs __e) => StatusChanged(__e))">

                                    
                                        <option  value="0">New</option>
                                        <option value="1">In Progress</option>
                                        <option value="2">Finished</option>
                                        
                                </select>
                            </div>
                        </td>
                        <td style="vertical-align: middle; width: 50%">
                            <div>
                                <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                                <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                                       value="@task.Progress"
                               @onchange="@((ChangeEventArgs __e) => ChangeProgressAndStatus(__e))">
                            </div>
                            @*<div>
                                <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                                <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                                       @bind="task.Progress">
                            </div>*@
                        </td>
                    </tr>
                    <tr>
                        <th>

                        </th>
                        <th>
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <button style="width: 100%" class="btn btn-secondary" @onclick="(() => CancelPartial())">
                                            <span aria-hidden="true">&times;</span>
                                            Cancel
                                        </button>
                                    </div>
                                    <div class="col-sm-6">
                                        <button style="width: 100%" class="btn btn-success" @onclick="(() => SaveEdits())">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                                                <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                                            </svg>
                                            Save
                                        </button>
                                    </div>
                                </div>
                            </div>



                        </th>
                    </tr>
                </thead>

            </table>

            @if (messageShow)
            {
                <div class="mb-3">
                    <label class="form-label" style="color: red">Invalid data. Try again.</label>
                </div>
            }



        </EditForm>

    }else if(authService.CurrentRoleName == "developer")
    {
        <table class="table">
            <thead>
                <tr>

                    @if (projcode == null)
                    {
                        <th style="width: 6%" @onclick="(() => Cancel())"><h2>Tasks </h2></th>
                        <th style="width: 94%"><h2>> Edit Task</h2></th>
                    }
                    
                </tr>
            </thead>
        </table>

        <EditForm Model="task" OnSubmit="HandleSubmit">
            <table class="table table-bordered table-hover" style="width:50%">
                <thead>
                    <tr>
                        <td style="vertical-align: middle;">

                            <div>
                                <label for="code">Project</label>
                                <InputText id="role" @bind-Value="task.ParentProjectProjectCode" class="form-control" disabled></InputText>
                            </div>

                        </td>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="name">Deadline</label>
                                <InputDate disabled id="name" @bind-Value="task.Deadline" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Name"></InputDate>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="user">Assign Task to</label>
                                <InputSelect disabled id="user" @bind-Value="task.AssigneeUsername" class="form-control" required>
                                    <option selected hidden>Choose...</option>
                                    @foreach (var user in UserService.Users)
                                    {
                                        
                                            if (user.Username == task.AssigneeUsername)
                                            {
                                                <option value="@user.Username">@NameOfUser(user)</option>
                                            }
                                        
                                    }
                                </InputSelect>
                            </div>
                        </td>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="name">Description</label>
                                <InputTextArea id="name" @bind-Value="task.Description" @bind-Value:format="dd/MM/yyyy" class="form-control" placeholder="Description" required></InputTextArea>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle;">
                            <div>
                                <label for="user">Task Status</label>
                                <select id="user" class="form-control" required
                                        value="@task.Status"
                                @onchange="@((ChangeEventArgs __e) => StatusChanged(__e))">


                                    <option value="0">New</option>
                                    <option value="1">In Progress</option>
                                    <option value="2">Finished</option>

                                </select>
                            </div>
                        </td>
                        <td style="vertical-align: middle; width: 50%">
                            <div>
                                <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                                <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                                       value="@task.Progress"
                               @onchange="@((ChangeEventArgs __e) => ChangeProgressAndStatus(__e))">
                            </div>
                            @*<div>
                    <label for="customRange3" class="form-label">Progress: @task.Progress%</label>
                    <input type="range" class="form-range" min="0" max="100" step="5" id="customRange3"
                    @bind="task.Progress">
                    </div>*@
                        </td>
                    </tr>
                    <tr>
                        <th>

                        </th>
                        <th>
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <button style="width: 100%" class="btn btn-secondary" @onclick="(() => CancelPartial())">
                                            <span aria-hidden="true">&times;</span>
                                            Cancel
                                        </button>
                                    </div>
                                    <div class="col-sm-6">
                                        <button style="width: 100%" class="btn btn-success" @onclick="(() => SaveEdits())">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                                                <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                                            </svg>
                                            Save
                                            </button>
                                    </div>
                                </div>
                            </div>



                        </th>
                    </tr>
                </thead>

            </table>

            @if (messageShow)
            {
                <div class="mb-3">
                    <label class="form-label" style="color: red">Invalid data. Try again.</label>
                </div>
            }



        </EditForm>
    }


}

@code {

    [Parameter]
    public string? projcode { get; set; }

    [Parameter]
    public int id { get; set; }


    private bool forProj = false;
    private string currentRole = "";
    private string loggedIn = "";
    private string loggedInName = "";
    private string loggedInSurname = "";
    //IDictionary<string, int> numberNames = new Dictionary<string, int>();
    List<int> list = new List<int>(){0, 1, 2};
    private int currentStatus = 0;

    public ProjectTask task = new ProjectTask { Deadline = DateTime.Today };
    private bool messageShow = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (projcode != null)
        {
            forProj = true;
            task.ParentProjectProjectCode = projcode;
        }
        task = ProjectTaskService.ProjectTasks.SingleOrDefault(t => t.ProjectTaskId == id, task);

        currentStatus = task.Status;

        currentRole = authService.CurrentRoleName;

        authService.SetCurrentRoleName(await LocalStorage.GetStringAsync("loggedInRoleName"));
        loggedIn = await LocalStorage.GetStringAsync("loggedIn");
        loggedInName = await LocalStorage.GetStringAsync("loggedInName");
        loggedInSurname = await LocalStorage.GetStringAsync("loggedInSurname");
        //numberNames.Add("New", 0); //adding a key/value using the Add() method
        //numberNames.Add("In Progress", 1);
        //numberNames.Add("Finished", 2);
        //await UserService.GetUsers();

        //username = await LocalStorage.GetStringAsync("user");
        //username = null;
        //loggedInName = await LocalStorage.GetStringAsync("loggedInName");
        //loggedInSurname = await LocalStorage.GetStringAsync("loggedInSurname");
        //authService.SetCurrentRoleName("administrator");

        //await RoleService.GetRoles();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("tasks");
    }
    private void CancelPartial()
    {
        NavigationManager.NavigateTo($"tasks/{projcode}");

    }

    private async void SaveEdits()
    {
        //Console.WriteLine(task.AssigneeUsername);
        //Console.WriteLine(task.Status);
        //Console.WriteLine(task.Progress);
        if (task.ParentProjectProjectCode == null || task.ParentProjectProjectCode == "" ||
            //task.Deadline.CompareTo(DateTime.Today) < 0 ||
            task.AssigneeUsername == null || task.AssigneeUsername == "")
        {
            messageShow = true;
        }
        else
        {
            //Console.WriteLine(task.AssigneeUsername);
            //Console.WriteLine(task.Status);
            //Console.WriteLine(task.Progress);
            var result = await ProjectTaskService.UpdateProjectTask(task, task.ProjectTaskId);
            if (result.IsSuccessStatusCode)
            {
                if (projcode == null)
                {
                    NavigationManager.NavigateTo("tasks");
                }
                else
                {
                    NavigationManager.NavigateTo($"tasks/{projcode}");
                }
            }
            else
            {
                NavigationManager.NavigateTo("error/createtask");
            }
        }

    }
    private async void Delete()
    {

        await ProjectTaskService.DeleteProjectTask(task.ProjectTaskId);

        if (projcode == null)
        {
            NavigationManager.NavigateTo("tasks");
        }
        else
        {
            NavigationManager.NavigateTo($"tasks/{projcode}");
        }



    }


    private async void HandleSubmit()
    {
        //await UserService.UpdateUser(user, username);
        //NavigationManager.NavigateTo("administrator/users");
    }

    private string NameOfUser(User u)
    {
        return u.Name + " " + u.Surname + "  [" + u.Username + "]";
    }

    private string NameOfProject(Project u)
    {
        return u.ProjectName + "  [" + u.ProjectCode + "]";
    }

    private bool CheckIfProjectManager(User u)
    {
        var r = RoleService.Roles.SingleOrDefault(r => r.RoleId == u.RoleId);
        if (r != null)
        {
            return r.RoleName == "Project Manager";
        }
        return false;
    }

    private bool ManagedByMe(Project p)
    {
        return p.ProjectManagerUsername == loggedIn;
    }

    private bool OnlyDevelopers(User u)
    {
        return u.RoleId == 1;
    }

    private bool CheckAvailableDeveloper(User u)
    {
        var r = RoleService.Roles.SingleOrDefault(r => r.RoleId == u.RoleId);
        if (r != null)
        {

            if (r.RoleName == "Developer" && ProjectTaskService.ProjectTasks.Where(t => t.AssigneeUsername == u.Username).ToArray().Length >= 3) return false;
            return true;
        }
        return false;
    }

    private void ChangeProgressAndStatus(ChangeEventArgs __e)
    {
        task.Progress = Convert.ToDouble(__e.Value.ToString());
        if (task.Progress == 100)
        {
            task.Status = 2;
            currentStatus = 2;
        }
        else if (task.Progress >= 0) {
            task.Status = 1;
            currentStatus = 1;
        }
        StateHasChanged();
    }

    private void StatusChanged(ChangeEventArgs __e)
    {
        double s = Convert.ToDouble(__e.Value.ToString());
        if (s == 0)
        {//new
            task.Status = 0;
            task.Progress = 0;
        }
        else if (s == 2)
        {//finished
            task.Status = 2;
            task.Progress = 100;
        }
        else if (s == 1)
        {//in progress
            task.Status = 1;
            if(task.Progress == 100)
            {
                task.Progress = 95;
            }
        }
        StateHasChanged();
    }

    private string StatusToString(int s)
    {
        if (s == 0) return "New";
        else if (s == 1) return "In Progress";
        else if (s == 2) return "Finished";
        else return "Error";
    }


}
