@page "/createuser"

@inject NavigationManager NavigationManager
@inject IRoleService RoleService
@inject IUserService UserService

<table class="table">
    <thead>
        <tr>
            <th style="width: 6%" @onclick="(() => Cancel())" ><h2>Users </h2></th>
            <th style="width: 94%"><h2>> Create a User </h2></th>
            
        </tr>
    </thead>
</table>

<EditForm Model="user" OnSubmit="HandleSubmit">
    <table class="table table-bordered table-hover" style="width:50%">
        <thead>
            <tr>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="name">Name</label>
                        <InputText id="name" @bind-Value="user.Name" class="form-control" placeholder="Name" required></InputText>
                    </div>
                </td>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="surname">Surname</label>
                        <InputText id="surname" @bind-Value="user.Surname" class="form-control" placeholder="Surname" required></InputText>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="username">Username</label>
                        <InputText id="username" @bind-Value="user.Username" class="form-control" placeholder="Username" required></InputText>
                    </div>
                </td>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="password">Password</label>
                        <InputText type="password" id="password" @bind-Value="user.Password" class="form-control" placeholder="Password" required></InputText>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="email">E-mail</label>
                        <InputText id="email" @bind-Value="user.Email" class="form-control" placeholder="name@example.com" required></InputText>
                    </div>
                </td>
                <td style="vertical-align: middle;">
                    <div>
                        <label for="role">Role</label>
                        <InputSelect id="role" @bind-Value="user.RoleId" class="form-control" required>
                            @foreach (var role in RoleService.Roles)
                            {
                                <option value="@role.RoleId">@role.RoleName</option>
                            }
                        </InputSelect>
                    </div>
                </td>
            </tr>
            <tr>
                <th>

                </th>
                <th>
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-sm-6">
                                <button style="width: 100%" class="btn btn-secondary" @onclick="(() => Cancel())">
                                    <span aria-hidden="true">&times;</span>
                                    Cancel</button>
                            </div>
                            <div class="col-sm-6">
                                <button style="width: 100%" class="btn btn-success" @onclick="(() => SaveEdits())">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                                            <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                                        </svg>
                                    Save</button>
                            </div>
                        </div>
                    </div>



                </th>
            </tr>
        </thead>

    </table>

    @if (messageShow)
    {
        <div class="mb-3">
            <label class="form-label" style="color: red">Invalid data. Try again.</label>
        </div>
    }



</EditForm>

@code {
    public User user = new User();
    private bool messageShow = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //await UserService.GetUsers();

        //username = await LocalStorage.GetStringAsync("user");
        //username = null;
        //loggedInName = await LocalStorage.GetStringAsync("loggedInName");
        //loggedInSurname = await LocalStorage.GetStringAsync("loggedInSurname");
        //authService.SetCurrentRoleName("administrator");

        //await RoleService.GetRoles();
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("users");
    }

    private async void SaveEdits()
    {
        if (user.Username == null || user.Username == "" || 
            user.Password == null || user.Password == "" ||
            user.Name == null || user.Name == "" ||
            user.Surname == null || user.Surname == "" ||
            user.Email == null || user.Email == "" ||
            user.RoleId == null

        )
        {
            messageShow = true;
        }
        else{

            var result = await UserService.CreateUser(user);
            if (result.IsSuccessStatusCode)
            {

            }
            else
            {
                NavigationManager.NavigateTo("error/createuser");
            }
        }

    }


    private async void HandleSubmit()
    {
        //await UserService.UpdateUser(user, username);
        //NavigationManager.NavigateTo("administrator/users");
    }

    public async Task<bool> testCreateUser(User u)
    {
        user = u;
        if (user.Username == null || user.Username == "" ||
            user.Password == null || user.Password == "" ||
            user.Name == null || user.Name == "" ||
            user.Surname == null || user.Surname == "" ||
            user.Email == null || user.Email == "" ||
            user.RoleId == null

        )
        {
            return false;
        }
        else
        {

            var result = await UserService.CreateUser(user);
            if (result.IsSuccessStatusCode)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
